<!-- views/pamonitoring.ejs.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Monitoring</title>

    <% include ../partials/head %>

    <script src="/angular/angular.js"></script>
    <script src="/angular-google-chart/ng-google-chart.js"></script>



    <script type="text/javascript" src="//www.google.com/jsapi"></script>
</head>

<script type="text/javascript">
  //-------------------------------------------------------------------------------------
  var angularApp = angular.module('myApp', []);
  angularApp.controller('getSensorCtrl', function ($scope, $http) {
    $scope.mSensorList = [];

    $scope.getSensorList = function () {
      console.log("getSensorList!");
      $http({
        method: 'GET',
        url: 'getallsensorparams'
      }).then(function (response) {
        $scope.mSensorList = response.data;
        $scope.selSensor = $scope.mSensorList[4];   //set initial value
        $scope.updateSelectBox();                   //imulate select for initial value
      }, function (error) {
        console.log("getSensorList ERROR: " + error);
      });
    };
    $scope.getSensorList();  //initial data load

    $scope.updateSelectBox = function () {
      let selSensID = $scope.selSensor.id;
      let selSensName = $scope.selSensor.sensor_name;
      console.log("updateSelectBox: selSensor[" + selSensID + "] -> " + selSensName);
      loadSensorData(selSensID, selSensName);
    }
  });

  //********************************************************************************************************************

  google.load('visualization', '1', {packages: ['controls', 'charteditor']});

  function loadSensorData(sensor_id, sensorName) {
    $.ajax({
      type: 'GET',
      url: '/getsensordata/' + sensor_id,
      success: function (result) {
        console.log("result.length -> " + result.length);
        mSensorData = result;

        google.setOnLoadCallback(drawData(sensorName));
      }
    });
  };

  function drawData(sensorName) {
    var data = new google.visualization.DataTable();
    //data.addColumn('number', 'X');
    data.addColumn('datetime', 'Date');
    data.addColumn('number', sensorName);
    //data.addColumn('number', 'test soba_2');

    for (var i = 0; i < mSensorData.length; i++) {
      let sVal = parseFloat(mSensorData[i].sensor_value);
      //console.log("val[" + i + "] -> " + sVal);

      let sTS = parseInt(mSensorData[i].timestamp * 1000);
      let sTSDate = new Date(sTS);
      data.addRow([sTSDate, sVal]);
    }

    var chartOptions = {
      height: 400,
      chartArea: {left: 70, top: 50, width: "95%"},
      legend: {position: 'top', alignment: 'end'},
      interpolateNulls: false,
      hAxis: {
        title: '',
        format: 'HH:mm:ss',
        gridlines: {
          count: 8,
          color: "#8c8c8c"
        },
        baselineColor: '#40cc34',
        textStyle: {
          color: '#01579b',
          fontSize: 18,
          fontName: 'Arial',
          bold: false,
          italic: false
        }
      },
      vAxis: {
        title: 'Temperatura',
        textStyle: {
          color: '#8b5f0a',
          fontSize: 18,
          bold: false
        },
        titleTextStyle: {
          color: '#8b5f0a',
          fontSize: 18,
          bold: true
        },
        gridlines: {
          count: 8,
          color: "#8C8C8C"
        },
        baselineColor: '#222222'
      },
      colors: ['#c53d47', '#31925a'],
      backgroundColor: '#f6f6f6'
    };

    var dash = new google.visualization.Dashboard(document.getElementById('dashboard_div'));

    var control = new google.visualization.ControlWrapper({
      controlType: 'ChartRangeFilter',
      containerId: 'control_div',
      options: {
        filterColumnIndex: 0,
        ui: {
          chartOptions: {
            height: 60,
            width: "95%",
            chartArea: {
              left: 70,
              width: '90%'
            },
            backgroundColor: '#dfdfdf'
          },
          chartView: {
            columns: [0, 1]
          }
        }
      }
    });

    var chart = new google.visualization.ChartWrapper({
      chartType: 'LineChart',
      containerId: 'chart_div',
    });
    function setOptions (wrapper) {
      wrapper.setOptions(chartOptions);
    }

    setOptions(chart);

    dash.bind([control], [chart]);
    dash.draw(data);
    google.visualization.events.addListener(control, 'statechange', function () {
      var v = control.getState();
      let dateStartStr = v.range.start;
      let dateEndStr = v.range.end;
      document.getElementById('chart_range_span').innerHTML = dateStartStr + '  to  ' + dateEndStr;
      return 0;
    });
  }

</script>

<body ng-app="myApp" ng-controller="getSensorCtrl">
<header>
    <% include ../partials/header %>
</header>

<div class="main_container" style="display: block">
    <div class="row">
        <h5>Select sensor to monitor</h5>
        <select class="selectpicker"
                ng-change="updateSelectBox()"
                ng-model="selSensor"
                ng-options="sensor.sensor_name for sensor in mSensorList">
        </select>
    </div>
    <div class="row">
        <div class="center">
            <div class="col-md-12">
                <!-- <div id="chart_div"></div> -->
                <div id="dashboard_div">
                    <div id="chart_div" style="display: block;"></div>
                    <div id="control_div"></div>
                    <p><span id='chart_range_span'></span></p>
                </div>
            </div>
        </div>
    </div>


</div>


<footer class="container-fluid text-center">
    <% include ../partials/footer %>
</footer>

</body>
</html>
